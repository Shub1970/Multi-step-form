@font-face {
  font-family: "Ubuntu-Regular";
  src: url(public/assets/fonts/converted-fonts/Ubuntu-Regular.woff)
    format("woff");
  font-style: normal;
}
@font-face {
  font-family: "Ubuntu-Regular";
  src: url(public/assets/fonts/converted-fonts/Ubuntu-Medium.woff)
    format("woff");
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: "Ubuntu-Regular";
  src: url(public/assets/fonts/converted-fonts/Ubuntu-Bold.woff) format("woff");
  font-weight: bold;
  font-style: normal;
}

:root {
  --font-family: "Ubuntu-Regular";
  --clr-accent-400: hsl(213, 96%, 18%);

  --clr-primary-100: hsl(206, 100%, 96%, 1);
  --clr-primary-200: hsl(231, 11%, 63%);
  --clr-primary-300: hsl(206, 94%, 87%);
  --clr-primary-400: hsl(228, 100%, 84%);
  --clr-primary-450: hsl(243, 100%, 62%);
  --clr-primary-500: hsl(213, 96%, 18%);

  --clr-primary-valid-400: hsl(243, 100%, 62%);
  --clr-primary-invalid-400: hsl(354, 84%, 57%);

  --clr-neutral-100: hsl(0, 0%, 100%);
  --clr-neutral-300: hsl(217, 100%, 97%);
  --clr-neutral-350: hsl(229, 24%, 87%);
  --clr-neutral-400: hsl(231, 11%, 63%);
  --clr-neutral-600: hsl(231, 100%, 99%);

  --fw-bold: 700;
  --fw-semi-bold: 500;
  --fw-regular: 400;
  --fs-200: 0.75rem;
  --fs-300: 0.8125rem;
  --fs-400: 0.875rem;
  --fs-500: 0.9375rem;
  --fs-600: 1rem;
  --fs-700: 1.875rem;
  --fs-750: 2rem;
  --fs-800: 2.5rem;
  --fs-900: 3.5rem;

  --fs-body: var(--fs-400);
  --fs-primary-heading: var(--fs-800);
  --fs-secondary-heading: var(--fs-700);
  --fs-nav: var(--fs-500);
  --fs-button: var(--fs-300);

  --size-50: 0.15rem;
  --size-100: 0.25rem;
  --size-200: 0.5rem;
  --size-300: 0.75rem;
  --size-400: 1rem;
  --size-500: 1.5rem;
  --size-600: 2rem;
  --size-650: 2.5rem;
  --size-700: 3rem;
  --size-800: 4rem;
  --size-900: 5rem;

  --ff-primary: "Ubuntu", sans-serif;

  --ff-body: var(--ff-primary);
  --ff-header: var(--ff-primary);
}

@media (min-width: 40rem) {
  :root {
    --fs-body: var(--fs-500);
    --fs-primary-heading: var(--fs-900);
    --fs-secondary-heading: var(--fs-800);
    --fs-nav: var(--fs-300);
  }
}

/* css reset */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  font-family: var(--font-family);
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* utility class */

.padding-block-900 {
  padding-block: var(--fs-900);
}

.padding-block-700 {
  padding-block: var(--fs-700);
}

.padding-block-400 {
  padding-block: var(--fs-400);
}

.padding-bottom-900 {
  padding-bottom: var(--fs-900);
}

.padding-bottom-700 {
  padding-bottom: var(--fs-700);
}

.padding-bottom-400 {
  padding-bottom: var(--fs-400);
}
.padding-top-900 {
  padding-top: var(--fs-900);
}

.padding-top-700 {
  padding-top: var(--fs-700);
}

.padding-top-400 {
  padding-top: var(--fs-400);
}

.padding-900 {
  padding: var(--fs-900);
}

.padding-700 {
  padding: var(--fs-700);
}

.padding-400 {
  padding: var(--fs-400);
}

.fw-bold {
  font-weight: var(--fw-bold);
}
.fw-semi-bold {
  font-weight: var(--fw-semi-bold);
}

.fw-regular {
  font-weight: var(--fw-regular);
}

.text-primary-450 {
  color: var(--clr-primary-450);
}
.text-primary-400 {
  color: var(--clr-primary-400);
}

.text-primary-300 {
  color: var(--clr-primary-300);
}

.text-primary-200 {
  color: var(--clr-primary-200);
}
.text-primary-100 {
  color: var(--clr-primary-100);
}

.text-neutral-600 {
  color: var(--clr-neutral-600);
}

.text-neutral-350 {
  color: var(--clr-neutral-350);
}

.text-neutral-400 {
  color: var(--clr-neutral-400);
}

.text-neutral-300 {
  color: var(--clr-neutral-300);
}

.text-neutral-100 {
  color: var(--clr-neutral-100);
}

.text-accent-400 {
  color: var(--clr-accent-400);
}
.bg-primary-400 {
  background-color: var(--clr-primary-400);
}

.bg-primary-300 {
  background-color: var(--clr-primary-300);
}

.bg-primary-100 {
  background-color: var(--clr-primary-100);
}

.bg-neutral-600 {
  background-color: var(--clr-neutral-600);
}

.bg-neutral-350 {
  background-color: var(--clr-neutral-350);
}

.bg-neutral-400 {
  background-color: var(--clr-neutral-400);
}

.bg-neutral-300 {
  background-color: var(--clr-neutral-300);
}

.bg-neutral-100 {
  background-color: var(--clr-neutral-100);
}

.bg-accent-400 {
  background-color: var(--clr-accent-400);
}

:where(.flow-inside :not(:first-child)) {
  margin-top: var(--flow-spacer, 1rem);
}

:where(.flow-outside > *:not(:first-child)) {
  margin-top: var(--flow-spacer, 1rem);
}

/* custom css */

.stack {
  display: inline-grid;
  grid-template-areas: "stack";
}

.stack > * {
  grid-area: stack;
}

.form-wrapper {
  display: grid;
  grid-template-columns: auto 1fr;
}

body {
  display: grid;
  justify-content: center;
  align-items: center;
  background: var(--clr-primary-300);
}

main {
  width: 600px;
}

.button-container {
  display: grid;
  grid-template-areas: "prev-button nex-button";
}
.button-container .prev-button {
  justify-self: start;
  grid-area: prev-button;
}
.button-container .nex-button {
  justify-self: end;
  grid-area: nex-button;
}

.form-wrapper {
  padding: var(--size-400);
  background: var(--clr-neutral-100);
  border-radius: var(--size-400);
}

.form-wrapper main {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

/* aside */

aside {
  counter-set: my-count;
}

aside ul {
  padding: var(--size-600);
}

aside li {
  counter-increment: my-count;
}

aside li::before {
  float: left;
  content: counter(my-count);
  height: 100%;
  aspect-ratio: 1/1;
  font-weight: var(--fw-bold);
  border-radius: 50%;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  margin-right: var(--size-400);
  color: var(--clr-primary-300);
  border: var(--size-50) solid var(--clr-primary-300);
}

aside .nav-bar.active::before {
  color: var(--clr-primary-500);
  background: var(--clr-primary-300);
}

aside ul {
  display: flex;
  flex-direction: column;
  gap: var(--size-400);
}

/* initial personal info */

form :where(input[type="text"], input[type="email"]) {
  width: 100%;
  padding: var(--fs-200);
  border-radius: 10px;
  margin-bottom: 20px;
}

.error-message {
  color: var(--clr-primary-invalid-400);
  font-weight: var(--fw-semi-bold);
  display: none;
}

input:not(:focus):not(:placeholder-shown):invalid {
  border: 1px solid var(--clr-primary-invalid-400);
}

.error-message:is(
    :has(+ input:not(:focus):not(:placeholder-shown):invalid),
    .active
  ) {
  display: inline;
}

input:not(:focus):not(:placeholder-shown):valid {
  border-color: var(--clr-primary-valid-400);
}
.error-message:has(+ input:not(:focus):not(:placeholder-shown):valid) {
  display: none;
}

.form-group .error-message {
  position: absolute;
  right: 0;
}

.content:has(fieldset:first-child.active) .previous {
  background-color: var(--clr-primary-300);
  color: var(--clr-primary-400);
  pointer-events: none;
}

.content:has(fieldset:last-child.active) button {
  display: none;
}

/* second form */

input[type="radio"] {
  display: none;
}

.form-group:has(input[type="radio"]) label {
  display: block;
  cursor: pointer;
  border: 2px solid var(--clr-primary-100);
  padding: var(--size-400);
}
.form-group:has(input[type="radio"]:checked) label {
  border: 2px solid var(--clr-primary-500);
}

.form-group:has(input[type="radio"]) label span {
  display: block;
}
fieldset[data-step="2"] .fieldset-content {
  --common-element-gap: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: var(--common-element-gap);
  row-gap: 50px;
}
fieldset[data-step="2"] .fieldset-content > * {
  flex-grow: 1;
  flex-basis: 130px;
}
